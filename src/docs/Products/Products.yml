paths: 
  /api/v1/products/: 
    get:
      summary: Get all products in DB
      tags: 
        - Products
      responses:
        "200":
          description: A Message "Products retrieved successfully" and an array of all products in DB
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "500":
          description: error server side 
    post:
      summary: Create a product in DB
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/addProduct"  
      responses:
        "200":
          description: A Message "Product added successfully" and the product created
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "500":
          description: error server side            
  /api/v1/products/{pid}:
    get:
      summary: Get product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID of a product from DB
          schema: 
            $type: ObjectId
      responses:
        "200":
          description: A message "Product retrieved successfully" and a product from DB
          content:
            application/json:
              schema:
                  $ref: "#components/schemas/Product" 
        "500": 
          description: error server side
    delete:
      summary: Delete a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID of a product from DB
          schema:
            $type: ObjectId
      responses:
        "200":
          description: return a message "Product deleted successfully" and an array of products in DB
        "400":
          description: error server side
    put:
      summary: Update a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID of a product from DB
          schema:
            $type: ObjectId
      requestBody:
        description: product properties to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updateProduct"
      responses:
        "200":
          description: return a message "Product updated successfully" and the product updated
        "400":
          description: error server side
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id generated by mongo
        title:
          type: string
          description: name of the product
        description:
          type: string
          description: a description of the product
        code:
          type: number
          description: code of the product
        price: 
          type: number 
          description: price of the product
        status:
          type: boolean
          description: status of the product
        stock: 
          type: number
          description: stock of the product
        category: 
          type: string
          description: category of the product
        thumbnail:
          type: string
          description: image of the product
        owner:
          type: string
          description: owner of the product, could be an email or admin
      example:
        _id: ObjectId(6505e0bb920e62370a1f8bd1)
        title: manzanas
        description: manzanas de arg
        price: 500
        status: true
        stock: 99
        category: frutas
        thumbnail: https://cdn3.iconfinder.com/data/icons/fruits-52/150/icon_fruit_apple-512.png
        owner: admin
  requestBodies:
    addProduct:
      type: object
      properties:
        title:
          type: string
          description: name of the product          
        description:
          type: string
          description: a description of the product        
        code:
          type: number
          description: code of the product, unique       
        price:
          type: number 
          description: price of the product        
        status:
          type: boolean
          description: status of the product        
        stock:
          type: number
          description: stock of the product        
        category:
          type: string
          description: category of the product        
      example:
        title: naranjas
        description: naranjas de arg
        code: NAR-ARG-948
        price: 400
        status: true
        stock: 250
        category: frutas   
    updateProduct:
      type: object
      properties:
        title:
          type: string
          description: name of the product          
        description:
          type: string
          description: a description of the product        
        code:
          type: number
          description: code of the product, unique       
        price:
          type: number 
          description: price of the product        
        status:
          type: boolean
          description: status of the product        
        stock:
          type: number
          description: stock of the product        
        category:
          type: string
          description: category of the product 
      example:
        description: Product description Modification
        price: 700
